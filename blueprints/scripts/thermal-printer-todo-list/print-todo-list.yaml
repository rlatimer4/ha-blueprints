blueprint:
  name: "Reliable TODO List Printer (Fixed)"
  description: >
    Print Home Assistant TODO lists to a thermal printer with checkboxes.
    
    Simplified and reliable version with proper parameter handling.
    Uses todo.get_items service to properly retrieve TODO list data.
    
    Features:
    - Prints items with [ ] or [X] checkboxes only
    - Dropdown selection for TODO lists
    - Simple printer device configuration
    - Clean formatting with date and item counts
    
  domain: script
  
  input:
    printer_device:
      name: "Thermal Printer Device Name"
      description: "Enter your ESPHome thermal printer device name (e.g., 'thermal_printer')"
      default: "thermal_printer"
      selector:
        text:
          
    default_todo_entity:
      name: "Default TODO List"
      description: "Default TODO list to print"
      selector:
        entity:
          domain: todo
          
    include_completed_default:
      name: "Include Completed Items by Default"
      default: false
      selector:
        boolean:
        
    add_date_default:
      name: "Add Date by Default"
      default: true
      selector:
        boolean:

# Fields for runtime customization
fields:
  todo_entity:
    description: "TODO list entity to print (overrides default)"
    required: false
    selector:
      entity:
        domain: todo
  include_completed:
    description: "Include completed items (overrides default)"
    required: false
    selector:
      boolean:

sequence:
  - variables:
      # Blueprint settings
      printer_device: !input printer_device
      default_todo_entity: !input default_todo_entity
      include_completed_default: !input include_completed_default
      add_date_default: !input add_date_default
      
      # Runtime parameters with fallbacks
      final_todo_entity: >
        {{ todo_entity if todo_entity is defined and todo_entity != "" else default_todo_entity }}
      final_include_completed: >
        {{ include_completed if include_completed is defined else include_completed_default }}
      
      # Formatting
      list_name: >
        {{ state_attr(final_todo_entity, 'friendly_name') or 
           final_todo_entity.split('.')[1].replace('_', ' ').title() }}
      current_date: "{{ now().strftime('%Y-%m-%d %H:%M') }}"

  # Get TODO items using the service call
  - service: todo.get_items
    target:
      entity_id: "{{ final_todo_entity }}"
    response_variable: todo_response

  - variables:
      # Extract and filter items
      all_items: "{{ todo_response[final_todo_entity]['items'] | default([]) }}"
      filtered_items: >
        {% if final_include_completed %}
          {{ all_items }}
        {% else %}
          {{ all_items | selectattr('status', 'equalto', 'needs_action') | list }}
        {% endif %}

  # Only proceed if we have items
  - condition: template
    value_template: "{{ filtered_items | length > 0 }}"

  # Print header
  - service: "esphome.{{ printer_device }}_print_text"
    data:
      message: "{{ list_name | upper }}"
      text_size: "M"
      alignment: "C"
      bold: true
      underline: false
      inverse: false
      rotation: 0
      
  - if:
      - condition: template
        value_template: "{{ add_date_default }}"
    then:
      - service: "esphome.{{ printer_device }}_print_text"
        data:
          message: "{{ current_date }}"
          text_size: "S"
          alignment: "C"
          bold: false
          underline: false
          inverse: false
          rotation: 0

  - service: "esphome.{{ printer_device }}_print_text"
    data:
      message: "================================"
      text_size: "S"
      alignment: "C"
      bold: false
      underline: false
      inverse: false
      rotation: 0
      
  - service: "esphome.{{ printer_device }}_feed_paper"
    data:
      lines: 1
      
  # Delay after header before starting items
  - delay:
      seconds: 1

  # Print each item
  - repeat:
      count: "{{ filtered_items | length }}"
      sequence:
        - variables:
            item: "{{ filtered_items[repeat.index - 1] }}"
            checkbox: >
              {% if item.status == 'completed' %}[X]{% else %}[ ]{% endif %}
            item_text: "{{ checkbox }} {{ item.summary }}"
                
        - service: "esphome.{{ printer_device }}_print_text"
          data:
            message: "{{ item_text }}"
            text_size: "S"
            alignment: "L"
            bold: "{{ item.status == 'completed' }}"
            underline: false
            inverse: false
            rotation: 0
            
        # Long delay between items (like debug version that worked)
        - delay:
            seconds: 2

  # Print footer
  - service: "esphome.{{ printer_device }}_feed_paper"
    data:
      lines: 1
      
  - delay:
      seconds: 1
      
  - service: "esphome.{{ printer_device }}_print_text"
    data:
      message: "================================"
      text_size: "S"
      alignment: "C"
      bold: false
      underline: false
      inverse: false
      rotation: 0
      
  - delay:
      milliseconds: 500
      
  - service: "esphome.{{ printer_device }}_print_text"
    data:
      message: >
        {{ filtered_items | length }} item{% if filtered_items | length != 1 %}s{% endif %}
        {% if not final_include_completed %}
          {% set completed_count = all_items | selectattr('status', 'equalto', 'completed') | list | length %}
          {% if completed_count > 0 %} ({{ completed_count }} completed){% endif %}
        {% endif %}
      text_size: "S"
      alignment: "C"
      bold: false
      underline: false
      inverse: false
      rotation: 0
      
  - delay:
      milliseconds: 500
      
  - service: "esphome.{{ printer_device }}_print_text"
    data:
      message: "{{ current_date }}"
      text_size: "S"
      alignment: "C"
      bold: false
      underline: false
      inverse: false
      rotation: 0
      
  - service: "esphome.{{ printer_device }}_feed_paper"
    data:
      lines: 3

mode: queued
icon: mdi:format-list-checkbox
