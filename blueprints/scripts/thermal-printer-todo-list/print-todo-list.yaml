blueprint:
  name: "Enhanced TODO List Printer (Queue Compatible)"
  description: >
    Print Home Assistant TODO lists to a thermal printer with checkboxes.
    
    Updated for the new thermal printer queue implementation with proper service names.
    Uses todo.get_items service to reliably retrieve TODO list data.
    
    Features:
    - Queue-compatible service calls with proper delays
    - Prints items with [ ] or [X] checkboxes
    - Dropdown selection for TODO lists
    - Clean formatting with date and item counts
    - Enhanced error handling and logging
    - Optimized for thermal printer paper usage
    
  domain: script
  
  input:
    printer_device:
      name: "Thermal Printer Device Name"
      description: "Enter your ESPHome thermal printer device name (e.g., 'thermal_printer')"
      default: "thermal_printer"
      selector:
        text:
          
    default_todo_entity:
      name: "Default TODO List"
      description: "Default TODO list to print"
      selector:
        entity:
          domain: todo
          
    include_completed_default:
      name: "Include Completed Items by Default"
      default: false
      selector:
        boolean:
        
    add_date_default:
      name: "Add Date by Default"
      default: true
      selector:
        boolean:
        
    header_style:
      name: "Header Style"
      description: "Choose header formatting style"
      default: "simple"
      selector:
        select:
          options:
            - value: "simple"
              label: "Simple (===)"
            - value: "decorated" 
              label: "Decorated (fancy)"
            - value: "minimal"
              label: "Minimal (no lines)"
              
    text_size:
      name: "Text Size"
      description: "Size for TODO items"
      default: "S"
      selector:
        select:
          options:
            - value: "S"
              label: "Small"
            - value: "M"
              label: "Medium"
            - value: "L"
              label: "Large"
              
    checkbox_style:
      name: "Checkbox Style"
      description: "Style for checkboxes"
      default: "brackets"
      selector:
        select:
          options:
            - value: "brackets"
              label: "[ ] [X]"
            - value: "dash"
              label: "- x"

# Fields for runtime customization
fields:
  todo_entity:
    description: "TODO list entity to print (overrides default)"
    required: false
    selector:
      entity:
        domain: todo
  include_completed:
    description: "Include completed items (overrides default)"
    required: false
    selector:
      boolean:
  add_date:
    description: "Add date to printout (overrides default)"
    required: false
    selector:
      boolean:

sequence:
  - variables:
      # Blueprint settings
      printer_device: !input printer_device
      default_todo_entity: !input default_todo_entity
      include_completed_default: !input include_completed_default
      add_date_default: !input add_date_default
      header_style: !input header_style
      text_size: !input text_size
      checkbox_style: !input checkbox_style
      
      # Runtime parameters with fallbacks
      final_todo_entity: >
        {{ todo_entity if todo_entity is defined and todo_entity != "" else default_todo_entity }}
      final_include_completed: >
        {{ include_completed if include_completed is defined else include_completed_default }}
      final_add_date: >
        {{ add_date if add_date is defined else add_date_default }}
      
      # Formatting variables
      list_name: >
        {{ state_attr(final_todo_entity, 'friendly_name') or 
           final_todo_entity.split('.')[1].replace('_', ' ').title() }}
      current_date: "{{ now().strftime('%Y-%m-%d %H:%M') }}"
      
      # Checkbox symbols based on style
      empty_checkbox: >
        {% if checkbox_style == 'dash' %}-
        {% else %}[ ]{% endif %}
      filled_checkbox: >
        {% if checkbox_style == 'dash' %}x
        {% else %}[X]{% endif %}

  # Log the start of printing
  - service: system_log.write
    data:
      message: "TODO Printer: Starting print job for {{ list_name }}"
      level: info

  # Wake printer to ensure it's ready
  - service: "esphome.{{ printer_device }}_wake_printer"
    
  - delay:
      milliseconds: 500

  # Get TODO items using the service call
  - service: todo.get_items
    target:
      entity_id: "{{ final_todo_entity }}"
    response_variable: todo_response

  - variables:
      # Extract and filter items
      all_items: "{{ todo_response[final_todo_entity]['items'] | default([]) }}"
      filtered_items: >
        {% if final_include_completed %}
          {{ all_items }}
        {% else %}
          {{ all_items | selectattr('status', 'equalto', 'needs_action') | list }}
        {% endif %}
      completed_count: "{{ all_items | selectattr('status', 'equalto', 'completed') | list | length }}"
      total_count: "{{ all_items | length }}"

  # Only proceed if we have items
  - condition: template
    value_template: "{{ filtered_items | length > 0 }}"

  # Print header based on style
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ header_style == 'decorated' }}"
        sequence:
          - service: "esphome.{{ printer_device }}_print_text"
            data:
              message: "╔═══════════════════════════════╗"
              text_size: "S"
              alignment: "C"
              bold: false
              underline: false
              inverse: false
              rotation: 0
                
          - service: "esphome.{{ printer_device }}_print_text"
            data:
              message: "║  {{ list_name | upper | center(29) }}  ║"
              text_size: "S"
              alignment: "C"
              bold: true
              underline: false
              inverse: false
              rotation: 0
              
          - service: "esphome.{{ printer_device }}_print_text"
            data:
              message: "╚═══════════════════════════════╝"
              text_size: "S"
              alignment: "C"
              bold: false
              underline: false
              inverse: false
              rotation: 0
              
      - conditions:
          - condition: template
            value_template: "{{ header_style == 'minimal' }}"
        sequence:
          - service: "esphome.{{ printer_device }}_print_text"
            data:
              message: "{{ list_name | upper }}"
              text_size: "M"
              alignment: "C"
              bold: true
              underline: false
              inverse: false
              rotation: 0            
    default:
      # Simple header style
      - service: "esphome.{{ printer_device }}_print_text"
        data:
          message: "{{ list_name | upper }}"
          text_size: "M"
          alignment: "C"
          bold: true
          underline: false
          inverse: false
          rotation: 0     
          
      - service: "esphome.{{ printer_device }}_print_text"
        data:
          message: "================================"
          text_size: "S"
          alignment: "C"
          bold: false
          underline: false
          inverse: false
          rotation: 0
  # Add date if requested
  - if:
      - condition: template
        value_template: "{{ final_add_date }}"
    then:
      - service: "esphome.{{ printer_device }}_print_text"
        data:
          message: "{{ current_date }}"
          text_size: "S"
          alignment: "C"
          bold: false
          underline: false
          inverse: false
          rotation: 0
          
  # Add spacing after header
  - service: "esphome.{{ printer_device }}_feed_paper"
    data:
      lines: 1
      
  # Log item count
  - service: system_log.write
    data:
      message: "TODO Printer: Printing {{ filtered_items | length }} items"
      level: info

  # Print each item with proper queue delays
  - repeat:
      count: "{{ filtered_items | length }}"
      sequence:
        - variables:
            item: "{{ filtered_items[repeat.index - 1] }}"
            checkbox: >
              {% if item.status == 'completed' %}{{ filled_checkbox }}{% else %}{{ empty_checkbox }}{% endif %}
            item_text: "{{ checkbox }} {{ item.summary }}"
            is_completed: "{{ item.status == 'completed' }}"
                
        # Print item with appropriate formatting
        - service: "esphome.{{ printer_device }}_print_text"
          data:
            message: "{{ item_text }}"
            text_size: "{{ text_size }}"
            alignment: "L"
            bold: "{{ is_completed }}"
            underline: false
            inverse: false
            rotation: 0
            
        # Queue-friendly delay between items
        - delay:
            milliseconds: 300

  # Print footer section
  - service: "esphome.{{ printer_device }}_feed_paper"
    data:
      lines: 1

  # Footer separator (only for non-minimal style)
  - if:
      - condition: template
        value_template: "{{ header_style != 'minimal' }}"
    then:
      - service: "esphome.{{ printer_device }}_print_text"
        data:
          message: "================================"
          text_size: "S"
          alignment: "C"
          bold: false
          underline: false
          inverse: false
          rotation: 0      
          
  # Print summary line
  - service: "esphome.{{ printer_device }}_print_text"
    data:
      message: >
        {{ filtered_items | length }} item{% if filtered_items | length != 1 %}s{% endif %}
        {% if not final_include_completed and completed_count > 0 %} ({{ completed_count }} completed){% endif %}
      text_size: "S"
      alignment: "C"
      bold: false
      underline: false
      inverse: false
      rotation: 0
  # Print timestamp
  - service: "esphome.{{ printer_device }}_print_text"
    data:
      message: "{{ current_date }}"
      text_size: "S"
      alignment: "C"
      bold: false
      underline: false
      inverse: false
      rotation: 0
      
  # Final paper feed
  - service: "esphome.{{ printer_device }}_feed_paper"
    data:
      lines: 3

  # Log completion
  - service: system_log.write
    data:
      message: "TODO Printer: Print job completed successfully"
      level: info

mode: queued
icon: mdi:format-list-checkbox
